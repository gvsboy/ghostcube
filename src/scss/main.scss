/* REMEMBER TO ADD -webkit PREFIXES!!! */

$splash-speed: 3.0s;

/* Cube Vars */
$cube-color: #abcdef;
$cube-size: 80px;
$z-translate: $cube-size / 2;

/* Header Vars */
$header-offset: 130px;
$header-width: 540px;



/* Animations */
@keyframes splash-cube {
  0%    { opacity: 0; }
  50%   { opacity: 1; margin-left: -$z-translate }
  100%  { margin-left: -(($header-width + $header-offset) / 2); }
}

@keyframes splash-header {
  0%    { width: 0; }
  50%   { width: 0; }
  100%  { width: $header-width; }
}



/* Styles */
body {
  margin: 0;
  background-color: #000;
  font-family: Verdana, sans-serif;
}

h1 {
  margin: 0;
  color: #6385a7;
  font-size: 60px;
  font-weight: normal;
}

h2 {
  margin: 0;
  color: $cube-color;
  font-size: 30px;
  font-weight: normal;
  line-height: 12px;
  margin-left: 4px;
}

#container {
  position: absolute;
  top: 50%;
  left: 50%;
  width: $cube-size;
  height: $cube-size;
  margin-top: -($cube-size / 2);
  margin-left: -($cube-size / 2);
  animation: splash-cube $splash-speed;
  animation-fill-mode: forwards;
}

#wrap {
  position: relative;
}

#header {
  overflow: hidden;
  margin-top: -10px;
  margin-left: $header-offset;
  padding-bottom: 12px;
  white-space: nowrap;
  animation: splash-header $splash-speed;
  animation-fill-mode: forwards;
}

#cube {
  position: absolute;
  top: 10px;
  left: 0;
  width: $cube-size;
  height: $cube-size;
  backface-visibility: visible;
  transform-style: preserve-3d;
}

#cube:hover .face {
  background-color: $cube-color;
  border-color: #000;
}

.face {
  position: absolute;
  width: $cube-size;
  height: $cube-size;
  border: 4px solid $cube-color;
  background: rgba(0, 0, 0, 0);
  cursor: pointer;
  transition: background-color 0.4s, border-color 0.4s;
}

.front {
  transform: translateZ($z-translate);
}
.back {
  transform: rotateY(180deg) translateZ($z-translate);
}
.right {
  transform: rotateY(90deg) translateZ($z-translate);
}
.left {
  transform: rotateY(-90deg) translateZ($z-translate);
}
.top {
  transform: rotateX(90deg) translateZ($z-translate);
}
.bottom {
  transform: rotateX(-90deg) translateZ($z-translate);
}
