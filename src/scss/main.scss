@import 'base';

html {
  font-size: 16px; /* Set base font size for em conversion */
}

body {
  margin: 0;
  background-color: #000;
  font-size: 62.5%; /* make em conversion simple as pie (/10) */
  font-family: Verdana, sans-serif;
}

h1 {
  margin: 0;
  color: #6385a7;
  font-size: 6em;
  font-weight: normal;
}

h2 {
  margin: 0;
  color: $cube-color;
  font-size: 3em;
  font-weight: normal;
  line-height: 12px;
  margin-left: 4px;
}



/*----------------------------------------------

  Cube

----------------------------------------------*/

#container {
  position: absolute;
  top: 50%;
  left: 50%;
  width: $cube-size;
  height: $cube-size;
  margin-top: -($cube-size / 2);
  margin-left: -(($header-width + $header-offset) / 2);
  @include animation(splash-cube $splash-speed forwards);

  &.game {
    @include game-start-animation(game-cube);

    #header {
      @include game-start-animation(game-header);
    }

    #stage {
      @include game-start-animation(stage);
    }

  }
}

#wrap {
  position: relative;
}

#header {
  overflow: hidden;
  margin-top: -10px;
  margin-left: $header-offset;
  padding-bottom: 12px;
  white-space: nowrap;
  @include animation(splash-header $splash-speed forwards);
}

#stage {
  position: absolute;
  top: 10px;
  left: 0;
}

.cube {
  width: $cube-size;
  height: $cube-size;
  @include backface-visibility(visible);
  @include transform-style(preserve-3d);
  @include animation(cube-rotate 4s linear infinite);

  &.splash:hover .face {
    background-color: $cube-color;
    border-color: #000;
  }

  &.transition {
    @include animation(cube-rotate-stop $BASE-SPEED ease-out forwards);
  }

  &.init {
    @include animation(none);
    @include transform(rotateX($cube-init-x) rotateY($cube-init-y));
  }
}

.face {
  position: absolute;
  width: $cube-size;
  height: $cube-size;
  border: 4px solid $cube-color;
  border-radius: 8px;
  cursor: pointer;
  @include transform-style(preserve-3d);
  @include transition(background-color 0.4s, border-color 0.4s);
}



/* Cube */

#front {
  @include transform(translateZ($cube-z));
}
#back {
  @include transform(rotateY(180deg) translateZ($cube-z));
}
#right {
  @include transform(rotateY(90deg) translateZ($cube-z));
}
#left {
  @include transform(rotateY(-90deg) translateZ($cube-z));
}
#top {
  @include transform(rotateX(90deg) translateZ($cube-z));
}
#bottom {
  @include transform(rotateX(-90deg) translateZ($cube-z));
}



/* Tiles */

.tile {
  display: none;
  position: absolute;
  width: $tile-size;
  height: $tile-size;
  border: 2px solid $cube-color;
  background-color: #000;
  @include transform(translateZ(0.01em));

  &:hover {
    background-color: $cube-color;
  }

  &.selected {
    background-color: $tile-selected;
  }

  &.highlighted {
    background-color: $tile-highlighted;
  }

  &.init {
    display: block;
    @include animation(tile-start $game-speed forwards);
  }
}

@for $t from 1 through 9 {
  .tile:nth-child(#{$t}) {
    @if $t <= 3           { top: 0; }
    @else if $t <= 6      { top: $tile-size; }
    @else                 { top: $tile-size * 2; }
    @if $t % 3 == 1       { left: 0; }
    @else if $t % 3 == 2  { left: $tile-size; }
    @else                 { left: $tile-size * 2; }
  }
}

